{"version":3,"sources":["features/game/utils.tsx","features/game/data.tsx","features/game/duck.tsx","features/game/components/primitives.tsx","features/game/components/GameBoard.tsx","features/game/containers/Game.tsx","features/game/components/ScoreBoard.tsx","features/game/containers/Scores.tsx","shared/components/primitives.tsx","App.tsx","root-reducer.ts","store.js","index.tsx"],"names":["createPartitions","input","slice","sort","reduce","output","item","length","getState","state","getGameBoard","board","getDefinitions","definitions","getCollectedItems","collected","getScoreBoard","createSelector","collectedItems","scoringDefinitions","partition","type","find","scoringDefinition","points","bonus","itemPoints","itemBonus","sum","quantity","getBonusPoints","totalPoints","getTotalScore","scoreBoard","total","scoreBoardItem","initialGameState","Heading","styled","h1","SubHeading","h2","GameWrapper","FullHeight","GameHeader","div","GameBoardWrapper","GameBoardItem","ScoresWrapper","ScoresHeader","ScoreBoardWrapper","ScoresFooter","Table","table","TableHeaderRow","tr","TableDataRow","ScoreItem","PointsWrapper","ActionsWrapper","Button","button","GameBoard","gameBoard","onItemClick","boardItemElements","map","boardItem","index","key","onClick","Game","dispatch","useDispatch","useSelector","id","payload","collectItem","ScoreBoard","hasStarted","scoreBoardHeaderRow","scoreBoardDataRows","Scores","bonusPoints","totalScore","Grid","App","rootReducer","combineReducers","action","collectedItem","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8208ae60.chunk.js","sourcesContent":["export function createPartitions<T>(input: T[]): T[][] {\n  return input\n    .slice()\n    .sort()\n    .reduce((output: T[][], item: T) => {\n      return !output.length || item !== output[output.length - 1][0]\n        ? [...output, [item]]\n        : [\n            ...output.slice(0, output.length - 1),\n            [...output[output.length - 1], item],\n          ];\n    }, []);\n}\n","import { BoardItem, ScoringDefinition } from \"./duck\";\n\nexport const currentDefinitions: ScoringDefinition[] = [\n  { type: \"A\", points: 50, bonus: [0, 0, 50] },\n  { type: \"B\", points: 30, bonus: [0, 30] },\n  { type: \"C\", points: 20, bonus: [] },\n  { type: \"D\", points: 15, bonus: [] },\n];\n\nexport const startBoard: BoardItem[] = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n];\n","import { RootState } from \"../../root-reducer\";\nimport { createSelector } from \"reselect\";\nimport { createPartitions } from \"./utils\";\nimport { currentDefinitions, startBoard } from \"./data\";\n\n/**\n * Feature identifier\n */\nexport const NAME = \"@game\";\n\n/**\n * Types, interfaces and constants\n */\nexport const RESET_GAME = \"@game/RESET_GAME\";\nexport const COLLECT_ITEM = \"@game/COLLECT_ITEM\";\n\nexport interface ResetGameAction {\n  type: typeof RESET_GAME;\n}\n\nexport interface CollectItemAction {\n  type: typeof COLLECT_ITEM;\n  payload: {\n    index: number;\n  };\n}\n\nexport type GameAction = ResetGameAction | CollectItemAction;\n\nexport type BoardItem = \"A\" | \"B\" | \"C\" | \"D\";\n\nexport interface ScoringDefinition {\n  type: BoardItem;\n  points: number;\n  bonus: number[];\n}\n\nexport interface ScoreBoardItem {\n  type: BoardItem;\n  quantity: number;\n  points: number;\n}\n\nexport interface GameState {\n  board: BoardItem[];\n  collected: BoardItem[];\n  definitions: ScoringDefinition[];\n}\n\n/**\n * Action creators\n */\nexport const resetGame = (): ResetGameAction => {\n  return {\n    type: RESET_GAME,\n  };\n};\n\nexport const collectItem = (index: number): CollectItemAction => {\n  return {\n    type: COLLECT_ITEM,\n    payload: { index },\n  };\n};\n\n/**\n * Selectors\n */\nexport const getState = (state: RootState) => state[NAME];\nexport const getGameBoard = (state: RootState) => getState(state).board;\nexport const getDefinitions = (state: RootState) => getState(state).definitions;\nexport const getCollectedItems = (state: RootState) =>\n  getState(state).collected;\n\nexport const getScoreBoard = createSelector(\n  getCollectedItems,\n  getDefinitions,\n  (collectedItems, scoringDefinitions) => {\n    const partitionedItems = createPartitions<BoardItem>(collectedItems);\n    return partitionedItems.reduce<ScoreBoardItem[]>((output, partition) => {\n      const type = partition[0];\n\n      const { points = 0, bonus = [] } =\n        scoringDefinitions.find(\n          (scoringDefinition) => scoringDefinition.type === type\n        ) || {};\n\n      const itemPoints = partition.length * points;\n\n      const itemBonus = bonus\n        .slice(0, partition.length)\n        .reduce((sum, bonus) => sum + bonus, 0);\n\n      return [\n        ...output,\n        {\n          type,\n          quantity: partition.length,\n          points: itemPoints + itemBonus,\n        },\n      ];\n    }, []);\n  }\n);\n\nexport const getBonusPoints = createSelector(\n  getCollectedItems,\n  getDefinitions,\n  (collectedItems, scoringDefinitions) => {\n    const partitionedItems = createPartitions<BoardItem>(collectedItems);\n    return partitionedItems.reduce((totalPoints, partition) => {\n      const type = partition[0];\n\n      const { bonus = [] } =\n        scoringDefinitions.find(\n          (scoringDefinition) => scoringDefinition.type === type\n        ) || {};\n\n      const bonusPoints = bonus\n        .slice(0, partition.length)\n        .reduce((sum, bonus) => sum + bonus, 0);\n\n      return totalPoints + bonusPoints;\n    }, 0);\n  }\n);\n\nexport const getTotalScore = createSelector(getScoreBoard, (scoreBoard) => {\n  return scoreBoard.reduce(\n    (total, scoreBoardItem) => scoreBoardItem.points + total,\n    0\n  );\n});\n\n/**\n * Game state and reducer\n */\nexport const initialGameState: GameState = {\n  board: startBoard,\n  collected: [],\n  definitions: currentDefinitions,\n};\n\nexport default function reducer(\n  state: GameState = initialGameState,\n  action: GameAction\n): GameState {\n  switch (action.type) {\n    case RESET_GAME:\n      return initialGameState;\n    case COLLECT_ITEM:\n      const collectedItem = state.board[action.payload.index];\n      return {\n        ...state,\n        board: [\n          ...state.board.slice(0, action.payload.index),\n          ...state.board.slice(action.payload.index + 1),\n        ],\n        collected: collectedItem\n          ? [...state.collected, collectedItem]\n          : state.collected,\n      };\n    default:\n      return state;\n  }\n}\n","import styled from \"styled-components\";\nimport FullHeight from \"react-div-100vh\";\n\nexport const Heading = styled.h1`\n  margin: 0;\n`;\n\nexport const SubHeading = styled.h2`\n  text-align: center;\n`;\n\nexport const GameWrapper = styled(FullHeight)`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #0f3ab3;\n`;\n\nexport const GameHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100px;\n  border-bottom: 1px solid #25076b;\n  background-color: #3c168a;\n  color: #fff;\n`;\n\nexport const GameBoardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  flex-grow: 1;\n  overflow-y: scroll;\n`;\n\nexport const GameBoardItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: calc((100% / 4) - (2 * 20px));\n  height: 150px;\n  margin: 20px;\n  background-color: #41c4df;\n  color: white;\n  border-radius: 10px;\n  font-size: 4rem;\n`;\n\nexport const ScoresWrapper = styled(FullHeight)`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nexport const ScoresHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100px;\n  border-bottom: 1px solid #aa142e;\n  background-color: #b10824;\n  color: #fff;\n`;\n\nexport const ScoreBoardWrapper = styled.div`\n  flex-grow: 1;\n  overflow-y: scroll;\n  background-color: #ffa601;\n`;\n\nexport const ScoresFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 250px;\n  border-top: 1px solid #aa142e;\n  font-size: 1.5rem;\n  background-color: #c60829;\n  color: #fff;\n\n  h3 {\n    margin: 0.5rem 1rem 0.5rem 1rem;\n  }\n`;\n\nexport const Table = styled.table`\n  position: relative;\n  width: 100%;\n  text-align: center;\n  border-collapse: collapse;\n  font-size: 1.2rem;\n\n  th {\n    background-color: #fff;\n    position: sticky;\n    top: 0;\n    width: calc(100% / 3);\n    font-size: 1.7rem;\n  }\n\n  td {\n    font-size: 2rem;\n  }\n`;\n\nexport const TableHeaderRow = styled.tr`\n  height: 5rem;\n`;\n\nexport const TableDataRow = styled.tr`\n  background-color: #ffc009;\n`;\n\nexport const ScoreItem = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 4rem;\n  height: 4rem;\n  margin: 1rem;\n  font-size: 3.5rem;\n  background-color: #41c4df;\n  color: #fff;\n  border-radius: 10px;\n`;\n\nexport const PointsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #aa142e;\n\n  h3 {\n    margin: 0.5rem 1.5rem;\n  }\n`;\n\nexport const ActionsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  margin: 0 1.5rem;\n  padding: 2rem;\n  font-size: 2rem;\n  border: 1px solid #fff;\n  border-radius: 10px;\n  background-color: #27890d;\n  color: #fff;\n`;\n","import React from \"react\";\n\nimport { BoardItem } from \"../duck\";\nimport { GameBoardItem, GameBoardWrapper } from \"../components/primitives\";\n\ninterface ScoreBoardProps {\n  gameBoard: BoardItem[];\n  onItemClick: (index: number) => void;\n}\n\nexport const GameBoard: React.FC<ScoreBoardProps> = ({\n  gameBoard,\n  onItemClick,\n}) => {\n  const boardItemElements = gameBoard.map((boardItem, index) => (\n    <GameBoardItem\n      key={`${index}-${boardItem}`}\n      onClick={() => onItemClick(index)}\n    >\n      {boardItem}\n    </GameBoardItem>\n  ));\n\n  return <GameBoardWrapper>{boardItemElements}</GameBoardWrapper>;\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getGameBoard, collectItem } from \"../duck\";\nimport { GameWrapper, GameHeader, Heading } from \"../components/primitives\";\nimport { GameBoard } from \"../components/GameBoard\";\n\nexport const Game: React.FC = () => {\n  const dispatch = useDispatch();\n  const gameBoard = useSelector(getGameBoard);\n\n  const handleItemClick = (index: number) => {\n    dispatch(collectItem(index));\n  };\n\n  return (\n    <GameWrapper id=\"game\">\n      <GameHeader>\n        <Heading>Kahoot! Points</Heading>\n      </GameHeader>\n      <GameBoard gameBoard={gameBoard} onItemClick={handleItemClick} />\n    </GameWrapper>\n  );\n};\n","import React from \"react\";\n\nimport { ScoreBoardItem } from \"../duck\";\nimport {\n  Table,\n  TableHeaderRow,\n  TableDataRow,\n  ScoreItem,\n  SubHeading,\n} from \"./primitives\";\n\ninterface ScoreBoardProps {\n  scoreBoard: ScoreBoardItem[];\n}\n\nexport const ScoreBoard: React.FC<ScoreBoardProps> = ({ scoreBoard = [] }) => {\n  const hasStarted = !!scoreBoard.length;\n\n  const scoreBoardHeaderRow = (\n    <TableHeaderRow>\n      <th>Item</th>\n      <th>Qty</th>\n      <th>Score</th>\n    </TableHeaderRow>\n  );\n\n  const scoreBoardDataRows = scoreBoard.map((scoreBoardItem, index) => (\n    <TableDataRow key={`${index}-${scoreBoardItem.type}`}>\n      <td>\n        <ScoreItem>{scoreBoardItem.type}</ScoreItem>\n      </td>\n      <td>{scoreBoardItem.quantity}</td>\n      <td>{scoreBoardItem.points}</td>\n    </TableDataRow>\n  ));\n\n  return (\n    <>\n      <Table>\n        <thead>{scoreBoardHeaderRow}</thead>\n        <tbody>{scoreBoardDataRows}</tbody>\n      </Table>\n      {!hasStarted && <SubHeading>Collect items!</SubHeading>}\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  getScoreBoard,\n  getBonusPoints,\n  getTotalScore,\n  resetGame,\n} from \"../duck\";\n\nimport {\n  Heading,\n  ScoresWrapper,\n  ScoresHeader,\n  ScoreBoardWrapper,\n  ScoresFooter,\n  PointsWrapper,\n  ActionsWrapper,\n  Button,\n} from \"../components/primitives\";\n\nimport { ScoreBoard } from \"../components/ScoreBoard\";\n\nexport const Scores: React.FC = () => {\n  const dispatch = useDispatch();\n  const scoreBoard = useSelector(getScoreBoard);\n  const bonusPoints = useSelector(getBonusPoints);\n  const totalScore = useSelector(getTotalScore);\n\n  const handleNewGameClick = () => {\n    dispatch(resetGame());\n  };\n\n  return (\n    <ScoresWrapper id=\"scores\">\n      <ScoresHeader>\n        <Heading>Player Items</Heading>\n      </ScoresHeader>\n      <ScoreBoardWrapper>\n        <ScoreBoard scoreBoard={scoreBoard} />\n      </ScoreBoardWrapper>\n      <ScoresFooter>\n        <PointsWrapper>\n          <h3>Bonuses:</h3>\n          <h3>{bonusPoints}</h3>\n        </PointsWrapper>\n        <PointsWrapper>\n          <h3>Total:</h3>\n          <h3>{totalScore}</h3>\n        </PointsWrapper>\n        <ActionsWrapper>\n          <Button onClick={handleNewGameClick}>New Game</Button>\n        </ActionsWrapper>\n      </ScoresFooter>\n    </ScoresWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 35%;\n  grid-template-rows: 1fr;\n`;\n","import React from \"react\";\n\nimport { Game } from \"./features/game/containers/Game\";\nimport { Scores } from \"./features/game/containers/Scores\";\nimport { Grid } from \"./shared/components/primitives\";\n\nfunction App() {\n  return (\n    <Grid>\n      <Game />\n      <Scores />\n    </Grid>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport gameReducer, { NAME as gameStateName } from \"./features/game/duck\";\n\nconst rootReducer = combineReducers({\n  [gameStateName]: gameReducer,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./root-reducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./shared/styles/global.css\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}