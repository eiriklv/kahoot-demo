{"version":3,"sources":["features/game/utils.tsx","features/game/data.tsx","features/game/duck.tsx","features/game/components/primitives.tsx","features/game/containers/GameBoard.tsx","features/game/containers/ScoreBoard.tsx","shared/components/primitives.tsx","App.tsx","root-reducer.ts","store.js","index.tsx"],"names":["createPartitions","input","slice","sort","reduce","output","item","length","getState","state","getGameBoard","board","getDefinitions","definitions","getCollectedItems","collected","getScoreBoard","createSelector","collectedItems","scoringDefinitions","partition","type","find","scoringDefinition","points","bonus","itemPoints","sum","itemBonus","quantity","getBonusPoints","totalPoints","getTotalScore","scoreBoard","total","scoreBoardItem","initialGameState","Heading","styled","h1","SubHeading","h2","GameBoardContainer","div","GameBoardHeader","GameBoardItemsContainer","GameBoardItem","ScoreBoardContainer","ScoreBoardHeader","ScoreBoardItemsContainer","ScoreBoardFooter","ScoreTable","table","ScoreTableHeaderRow","tr","ScoreTableDataRow","ScoreTableCell","td","ScoreItem","PointsContainer","ButtonContainer","Button","button","GameBoard","props","bottomHeight","use100vh","gameBoard","useSelector","dispatch","useDispatch","gameItemElements","map","boardItem","index","onClick","payload","collectItem","handleItemClick","style","height","ScoreBoard","tableHeight","bonusPoints","totalScore","scoreTableHeaderRow","hasItems","scoreTableDataRows","AppContainer","App","rootReducer","combineReducers","action","collectedItem","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2ea0216.chunk.js","sourcesContent":["export function createPartitions<T>(input: T[]): T[][] {\n  return input\n    .slice()\n    .sort()\n    .reduce((output: T[][], item: T) => {\n      return !output.length || item !== output[output.length - 1][0]\n        ? [...output, [item]]\n        : [\n            ...output.slice(0, output.length - 1),\n            [...output[output.length - 1], item],\n          ];\n    }, []);\n}\n","import { BoardItem, ScoringDefinition } from \"./duck\";\n\nexport const currentDefinitions: ScoringDefinition[] = [\n  { type: \"A\", points: 50, bonus: [0, 0, 50] },\n  { type: \"B\", points: 30, bonus: [0, 30] },\n  { type: \"C\", points: 20, bonus: [] },\n  { type: \"D\", points: 15, bonus: [] },\n];\n\nexport const startBoard: BoardItem[] = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"A\",\n];\n","import { RootState } from \"../../root-reducer\";\nimport { createSelector } from \"reselect\";\nimport { createPartitions } from \"./utils\";\nimport { currentDefinitions, startBoard } from \"./data\";\n\n/**\n * Feature identifier\n */\nexport const NAME = \"@game\";\n\n/**\n * Types, interfaces and constants\n */\nexport const RESET_GAME = \"@game/RESET_GAME\";\nexport const START_GAME = \"@game/START_GAME\";\nexport const COLLECT_ITEM = \"@game/COLLECT_ITEM\";\n\nexport interface ResetGameAction {\n  type: typeof RESET_GAME;\n}\n\nexport interface CollectItemAction {\n  type: typeof COLLECT_ITEM;\n  payload: {\n    index: number;\n  };\n}\n\nexport type GameAction = ResetGameAction | CollectItemAction;\n\nexport type BoardItem = \"A\" | \"B\" | \"C\" | \"D\";\n\nexport interface ScoringDefinition {\n  type: BoardItem;\n  points: number;\n  bonus: number[];\n}\n\nexport interface ScoreBoardItem {\n  type: BoardItem;\n  quantity: number;\n  points: number;\n}\n\nexport interface GameState {\n  board: BoardItem[];\n  collected: BoardItem[];\n  definitions: ScoringDefinition[];\n}\n\n/**\n * Action creators\n */\nexport const resetGame = (): ResetGameAction => {\n  return {\n    type: RESET_GAME,\n  };\n};\n\nexport const collectItem = (index: number): CollectItemAction => {\n  return {\n    type: COLLECT_ITEM,\n    payload: { index },\n  };\n};\n\n/**\n * Selectors\n */\nexport const getState = (state: RootState) => state[NAME];\nexport const getGameBoard = (state: RootState) => getState(state).board;\nexport const getDefinitions = (state: RootState) => getState(state).definitions;\nexport const getCollectedItems = (state: RootState) =>\n  getState(state).collected;\n\nexport const getScoreBoard = createSelector(\n  getCollectedItems,\n  getDefinitions,\n  (collectedItems, scoringDefinitions) => {\n    const partitionedItems = createPartitions<BoardItem>(collectedItems);\n    return partitionedItems.reduce<ScoreBoardItem[]>((output, partition) => {\n      const type = partition[0];\n\n      const { points = 0, bonus = [] } =\n        scoringDefinitions.find(\n          (scoringDefinition) => scoringDefinition.type === type\n        ) || {};\n\n      const itemPoints = partition.reduce((sum, item) => sum + points, 0);\n\n      const itemBonus = bonus\n        .slice(0, partition.length)\n        .reduce((sum, bonus) => sum + bonus, 0);\n\n      return [\n        ...output,\n        {\n          type,\n          quantity: partition.length,\n          points: itemPoints + itemBonus,\n        },\n      ];\n    }, []);\n  }\n);\n\nexport const getBonusPoints = createSelector(\n  getCollectedItems,\n  getDefinitions,\n  (collectedItems, scoringDefinitions) => {\n    const partitionedItems = createPartitions<BoardItem>(collectedItems);\n    return partitionedItems.reduce((totalPoints, partition) => {\n      const type = partition[0];\n\n      const { bonus = [] } =\n        scoringDefinitions.find(\n          (scoringDefinition) => scoringDefinition.type === type\n        ) || {};\n\n      const bonusPoints = bonus\n        .slice(0, partition.length)\n        .reduce((sum, bonus) => sum + bonus, 0);\n\n      return totalPoints + bonusPoints;\n    }, 0);\n  }\n);\n\nexport const getTotalScore = createSelector(getScoreBoard, (scoreBoard) => {\n  return scoreBoard.reduce(\n    (total, scoreBoardItem) => scoreBoardItem.points + total,\n    0\n  );\n});\n\n/**\n * Game state and reducer\n */\nexport const initialGameState: GameState = {\n  board: startBoard,\n  collected: [],\n  definitions: currentDefinitions,\n};\n\nexport default function reducer(\n  state: GameState = initialGameState,\n  action: GameAction\n): GameState {\n  switch (action.type) {\n    case \"@game/RESET_GAME\":\n      return initialGameState;\n    case \"@game/COLLECT_ITEM\":\n      const collectedItem = state.board[action.payload.index];\n      return {\n        ...state,\n        board: [\n          ...state.board.slice(0, action.payload.index),\n          ...state.board.slice(action.payload.index + 1),\n        ],\n        collected: collectedItem\n          ? [...state.collected, collectedItem]\n          : state.collected,\n      };\n    default:\n      return state;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Heading = styled.h1`\n  margin: 0;\n`;\n\nexport const SubHeading = styled.h2`\n  text-align: center;\n`;\n\nexport const GameBoardContainer = styled.div`\n  background-color: #0f3ab3;\n`;\n\nexport const GameBoardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  border-bottom: 1px solid #25076b;\n  background-color: #3c168a;\n  color: #fff;\n`;\n\nexport const GameBoardItemsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  max-height: calc(100vh - 100px);\n  overflow-y: scroll;\n`;\n\nexport const GameBoardItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: calc((100% / 4) - (2 * 20px));\n  height: 150px;\n  margin: 20px;\n  background-color: #41c4df;\n  color: white;\n  border-radius: 10px;\n  font-size: 4rem;\n`;\n\nexport const ScoreBoardContainer = styled.div`\n  background-color: goldenrod;\n`;\n\nexport const ScoreBoardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  border-bottom: 1px solid #aa142e;\n  background-color: #b10824;\n  color: #fff;\n`;\n\nexport const ScoreBoardItemsContainer = styled.div`\n  height: calc(100vh - 100px - 250px);\n  overflow-y: scroll;\n  background-color: #ffa601;\n`;\n\nexport const ScoreBoardFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 250px;\n  border-top: 1px solid #aa142e;\n  font-size: 1.5rem;\n  background-color: #c60829;\n  color: #fff;\n\n  h3 {\n    margin: 0.5rem 1rem 0.5rem 1rem;\n  }\n`;\n\nexport const ScoreTable = styled.table`\n  position: relative;\n  width: 100%;\n  text-align: center;\n  border-collapse: collapse;\n  font-size: 1.2rem;\n  border-spacing: 0 5px;\n\n  th {\n    background-color: #fff;\n    position: sticky;\n    top: 0;\n    font-size: 1.7rem;\n  }\n\n  td {\n    width: calc(100% / 3);\n    font-size: 2rem;\n  }\n`;\n\nexport const ScoreTableHeaderRow = styled.tr`\n  height: 100px;\n`;\n\nexport const ScoreTableDataRow = styled.tr`\n  background-color: #ffc009;\n`;\n\nexport const ScoreTableCell = styled.td``;\n\nexport const ScoreItem = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  height: 70px;\n  margin: 20px;\n  font-size: 3.5rem;\n  background-color: #41c4df;\n  color: #fff;\n  border-radius: 10px;\n`;\n\nexport const PointsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #aa142e;\n\n  h3 {\n    margin: 10px 20px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  margin: 0 20px;\n  font-size: 2rem;\n  padding: 2rem;\n  border: 1px solid #fff;\n  border-radius: 10px;\n  background-color: #27890d;\n  color: #fff;\n`;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { use100vh } from \"react-div-100vh\";\nimport { getGameBoard, collectItem } from \"../duck\";\n\nimport {\n  GameBoardItem,\n  GameBoardContainer,\n  GameBoardHeader,\n  GameBoardItemsContainer,\n  Heading,\n} from \"../components/primitives\";\n\nexport const GameBoard: React.FC = (props) => {\n  const height = use100vh();\n  const bottomHeight = (height || 0) - 100;\n\n  const gameBoard = useSelector(getGameBoard);\n  const dispatch = useDispatch();\n\n  const handleItemClick = (index: number) => {\n    dispatch(collectItem(index));\n  };\n\n  const gameItemElements = gameBoard.map((boardItem, index) => (\n    <GameBoardItem onClick={() => handleItemClick(index)}>\n      {boardItem}\n    </GameBoardItem>\n  ));\n\n  return (\n    <GameBoardContainer>\n      <GameBoardHeader>\n        <Heading>Kahoot! Points</Heading>\n      </GameBoardHeader>\n      <GameBoardItemsContainer style={{ height: bottomHeight }}>\n        {gameItemElements}\n      </GameBoardItemsContainer>\n    </GameBoardContainer>\n  );\n};\n","import React from \"react\";\nimport { use100vh } from \"react-div-100vh\";\n\nimport {\n  getScoreBoard,\n  getBonusPoints,\n  getTotalScore,\n  resetGame,\n} from \"../duck\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Heading,\n  SubHeading,\n  ScoreBoardContainer,\n  ScoreBoardHeader,\n  ScoreBoardItemsContainer,\n  ScoreBoardFooter,\n  ScoreTable,\n  ScoreTableHeaderRow,\n  ScoreTableDataRow,\n  ScoreTableCell,\n  ScoreItem,\n  PointsContainer,\n  ButtonContainer,\n  Button,\n} from \"../components/primitives\";\n\nexport const ScoreBoard: React.FC = (props) => {\n  const height = use100vh();\n  const tableHeight = (height || 0) - 100 - 250;\n\n  const dispatch = useDispatch();\n\n  const scoreBoard = useSelector(getScoreBoard);\n  const bonusPoints = useSelector(getBonusPoints);\n  const totalScore = useSelector(getTotalScore);\n\n  const handleNewGameClick = () => {\n    dispatch(resetGame());\n  };\n\n  const scoreTableHeaderRow = (\n    <ScoreTableHeaderRow>\n      <th>Item</th>\n      <th>Qty</th>\n      <th>Score</th>\n    </ScoreTableHeaderRow>\n  );\n\n  const hasItems = !!scoreBoard.length;\n\n  const scoreTableDataRows = scoreBoard.map((scoreBoardItem) => (\n    <ScoreTableDataRow>\n      <ScoreTableCell>\n        <ScoreItem>{scoreBoardItem.type}</ScoreItem>\n      </ScoreTableCell>\n      <ScoreTableCell>{scoreBoardItem.quantity}</ScoreTableCell>\n      <ScoreTableCell>{scoreBoardItem.points}</ScoreTableCell>\n    </ScoreTableDataRow>\n  ));\n\n  return (\n    <ScoreBoardContainer>\n      <ScoreBoardHeader>\n        <Heading>Player Items</Heading>\n      </ScoreBoardHeader>\n      <ScoreBoardItemsContainer style={{ height: tableHeight }}>\n        <ScoreTable>\n          {scoreTableHeaderRow}\n          {scoreTableDataRows}\n        </ScoreTable>\n        {!hasItems && <SubHeading>Collect items!</SubHeading>}\n      </ScoreBoardItemsContainer>\n      <ScoreBoardFooter>\n        <PointsContainer>\n          <h3>Bonuses:</h3>\n          <h3>{bonusPoints}</h3>\n        </PointsContainer>\n        <PointsContainer>\n          <h3>Total:</h3>\n          <h3>{totalScore}</h3>\n        </PointsContainer>\n        <ButtonContainer>\n          <Button onClick={handleNewGameClick}>New Game</Button>\n        </ButtonContainer>\n      </ScoreBoardFooter>\n    </ScoreBoardContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 35%;\n  grid-template-rows: 1fr;\n  background-color: yellow;\n`;\n","import React from \"react\";\n\nimport { GameBoard } from \"./features/game/containers/GameBoard\";\nimport { ScoreBoard } from \"./features/game/containers/ScoreBoard\";\nimport { AppContainer } from \"./shared/components/primitives\";\n\nfunction App() {\n  return (\n    <AppContainer>\n      <GameBoard />\n      <ScoreBoard />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport gameReducer, { NAME as gameStateName } from \"./features/game/duck\";\n\nconst rootReducer = combineReducers({\n  [gameStateName]: gameReducer,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./root-reducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./shared/styles/global.css\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}